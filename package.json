{
  "name": "volunteer-management-bot",
  "version": "1.0.0",
  "description": "Telegram bot for volunteer management using grammY and Drizzle ORM",
  "main": "dist/bot.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/bot.js",
    "watch": "tsc --watch",
    "type-check": "tsc -p tsconfig.json --noEmit",
    "lint": "tsc --noEmit",
    "precommit": "npm run lint && npm run test",
    "_comment1": "=== LOCAL DEVELOPMENT ===",
    "dev:local": "dotenv -e .env.local -- ts-node src/bot.ts",
    "setup:local": "npm run db:migrate:local && npm run db:seed:local",
    "setup:fresh": "npm run reset:local && npm run setup:local",
    "reset:local": "ts-node scripts/reset-local-db.ts",
    "db:migrate:local": "dotenv -e .env.local -- ts-node src/migrate.ts",
    "db:seed:local": "dotenv -e .env.local -- ts-node scripts/seed-data.ts",
    "db:studio:local": "dotenv -e .env.local -- drizzle-kit studio",
    "test:local": "dotenv -e .env.local -- npm test",
    "_comment2": "=== STAGING ENVIRONMENT ===",
    "dev:staging": "dotenv -e .env.staging -- ts-node src/bot.ts",
    "setup:staging": "npm run db:migrate:staging",
    "db:migrate:staging": "dotenv -e .env.staging -- ts-node src/migrate.ts",
    "db:studio:staging": "dotenv -e .env.staging -- drizzle-kit studio",
    "db:backup:staging": "dotenv -e .env.staging -- sh -c 'pg_dump $STAGING_DATABASE_URL > staging_backup_$(date +%Y%m%d_%H%M%S).sql'",
    "migration:safe-deploy:staging": "npm run db:backup:staging && npm run db:migrate:staging",
    "test:staging": "dotenv -e .env.staging -- npm test",
    "deploy:staging": "vercel --prod --local-config vercel.staging.json",
    "_comment3": "=== PRODUCTION ENVIRONMENT ===",
    "dev:prod": "dotenv -e .env.production -- ts-node src/bot.ts",
    "setup:prod": "npm run db:migrate:prod",
    "db:migrate:prod": "dotenv -e .env.production -- ts-node src/migrate.ts",
    "db:studio:prod": "dotenv -e .env.production -- drizzle-kit studio",
    "db:backup:prod": "dotenv -e .env.production -- sh -c 'pg_dump $PRODUCTION_DATABASE_URL > prod_backup_$(date +%Y%m%d_%H%M%S).sql'",
    "migration:safe-deploy:prod": "npm run db:backup:prod && npm run db:migrate:prod",
    "test:prod": "dotenv -e .env.production -- npm test",
    "deploy:prod": "vercel --prod --local-config vercel.production.json",
    "deploy:preview": "vercel --local-config vercel.staging.json",
    "_comment4": "=== TESTING & UTILITIES ===",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "db:generate": "drizzle-kit generate",
    "db:introspect": "ts-node scripts/introspect-db.ts"
  },
  "keywords": [
    "telegram",
    "bot",
    "grammy",
    "drizzle",
    "volunteer",
    "management"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@electric-sql/pglite": "^0.2.0",
    "dotenv": "^16.3.1",
    "drizzle-kit": "^0.31.4",
    "drizzle-orm": "^0.44.5",
    "grammy": "^1.19.2",
    "postgres": "^3.4.7"
  },
  "devDependencies": {
    "@types/jest": "^29.5.0",
    "@types/node": "^20.0.0",
    "@types/supertest": "^6.0.0",
    "dotenv-cli": "^7.4.2",
    "drizzle-kit": "^0.31.4",
    "supertest": "^7.0.0",
    "ts-node": "^10.9.1",
    "typescript": "^5.0.0",
    "vitest": "^1.6.0"
  }
}
